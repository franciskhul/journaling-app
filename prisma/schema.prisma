// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid()) @db.Uuid
  name       String
  email      String     @unique
  password   String
  role       Role       @default(USER)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Journal    Journal[]
  categories Category[]

  @@index([email])
  @@index([id])
}

enum Role {
  ADMIN
  USER
}

model Journal {
  id              String            @id @default(uuid()) @db.Uuid
  userId          String            @db.Uuid
  title           String
  content         String            @db.Text
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  user            User              @relation(fields: [userId], references: [id])
  categories      Category[]        @relation("JournalCategories")
  JournalCategory JournalCategory[]

  @@index([userId])
  @@index([title])
  @@index([createdAt])
}

model Category {
  id              String  @id @default(uuid()) @db.Uuid
  name            String  @unique
  color           String
  systemGenerated Boolean @default(false)

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  journals        Journal[]         @relation("JournalCategories")
  JournalCategory JournalCategory[]
  User            User?             @relation(fields: [userId], references: [id])
  userId          String?           @db.Uuid

  @@index([createdAt])
}

model JournalCategory {
  journalId  String @db.Uuid
  categoryId String @db.Uuid

  journal  Journal  @relation(fields: [journalId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([journalId, categoryId]) // Composite primary key
}
